#
# this dockerfile roughly follows the 'Ubuntu install of ROS Melodic' from:
#   http://wiki.ros.org/melodic/Installation/Ubuntu
#
ARG BASE_IMAGE=Dockerfile.ros.melodic
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=melodic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /

# Create src folder inside the HOME folder
# This is for installing non-ROS packages from source
RUN cd $HOME && mkdir src

RUN apt update && apt-get install -y --no-install-recommends \
        software-properties-common \
        apt-utils \
        gedit \
        net-tools \
        iputils-ping \
        nano \
        bash-completion \
        python3-pip \
        python-catkin-tools \
        python-vcstool \
        libcurl4-openssl-dev \
        &&  rm -rf /var/lib/apt/lists/*

# Add MAVLink and mavros
RUN apt-get update && apt-get -y --quiet --no-install-recommends install \
		geographiclib-tools \
		libgeographic-dev \
		libyaml-cpp-dev \
		python-pip \
		python-tk \
		ros-melodic-mav-msgs \
		ros-melodic-mavlink \
		ros-melodic-mavros \
		ros-melodic-mavros-extras \
	&& geographiclib-get-geoids egm96-5 \
	&& apt-get -y autoremove \
	&& apt-get clean autoclean \
    && rm -rf /var/lib/apt/lists/*

# Dependencies for ceres solver
RUN apt update && apt install -y libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev libblas-dev liblapack-dev

# Create ROS catkin_ws to host ROS packages
RUN mkdir -p $HOME/catkin_ws/src \
    && cd $HOME/catkin_ws \
    && catkin init \
    && catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release \
    && catkin config --merge-devel \
    && catkin config --extend /opt/ros/$ROS_DISTRO \
    && catkin build

RUN apt-get install -y cmake libavcodec-dev libavformat-dev libavutil-dev \
    libglew-dev libgtk2.0-dev libgtk-3-dev libjpeg-dev libpng-dev libpostproc-dev \
    libswscale-dev libtbb-dev libtiff5-dev libv4l-dev libxvidcore-dev \
    libx264-dev qt5-default zlib1g-dev libgl1 libglvnd-dev pkg-config \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev mesa-utils     

RUN apt-get install -y python2.7-dev python3-dev python-numpy python3-numpy
RUN apt-get install -y libopencv-dev
RUN apt-get install -y ros-$ROS_DISTRO-rqt-gui ros-$ROS_DISTRO-rqt-gui-py
RUN apt-get install -y ros-$ROS_DISTRO-cv-bridge ros-$ROS_DISTRO-tf-conversions
RUN apt-get install -y ros-$ROS_DISTRO-pcl-ros \
    && apt-get -y autoremove \
	&& apt-get clean autoclean \
    && rm -rf /var/lib/apt/lists/*

#
# setup CUDA environment variables
#
ENV CUDA_HOME="/usr/local/cuda"
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"


#
# SVO Pro
#
RUN cd $HOME/catkin_ws/ &&\
    catkin config --cmake-args -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3 &&\
    cd src && git clone https://github.com/uzh-rpg/rpg_svo_pro_open.git
RUN cd
COPY ./patches/dependencies.yaml /root/catkin_ws/src/rpg_svo_pro_open/
RUN cd $HOME/catkin_ws/src/ &&\
    vcs-import < ./rpg_svo_pro_open/dependencies.yaml &&\
    touch minkindr/minkindr_python/CATKIN_IGNORE &&\
    cd rpg_svo_pro_open/svo_online_loopclosing/vocabularies && ./download_voc.sh &&\
    cd $HOME/catkin_ws/src/ &&\
    rm rpg_svo_pro_open/svo_global_map/CATKIN_IGNORE

COPY ./patches/svo/SvoSetup.cmake /root/catkin_ws/src/rpg_svo_pro_open/svo_cmake/cmake/Modules/

#
# Patch dbow2_catkin
# Similar Related issue: https://github.com/MIT-SPARK/Kimera-VIO-ROS/issues/19
#
COPY ./patches/dbow2_catkin/CMakeLists.txt /root/catkin_ws/src/dbow2_catkin/

#
# Clone GTSAM
#
RUN cd $HOME/catkin_ws/src && git clone --branch 4.0.3 https://github.com/borglab/gtsam.git
COPY ./patches/gtsam/CMakeLists.txt /root/catkin_ws/src/gtsam/
#COPY ./patches/gtsam/GtsamBuildTypes.cmake /root/catkin_ws/src/gtsam/cmake/

#
# Upgrade CMake: https://cmake.org/install/
#
ARG CMAKE_VERSION=3.21.4
RUN cd $HOME/src && wget https://github.com/Kitware/CMake/releases/download/v3.21.4/cmake-${CMAKE_VERSION}.tar.gz && \
    tar -xzf cmake-${CMAKE_VERSION}.tar.gz && \
    cd cmake-${CMAKE_VERSION} && \
    cmake -DCMAKE_BUILD_TYPE:STRING=Release . && \
    make && make install

# Build gtsam
RUN cd $HOME/catkin_ws/ &&\
    catkin build gtsam

#
# Realsense SDK
#

# dependencies
RUN apt-get update && apt-get install -y rsync libssl-dev freeglut3-dev libusb-1.0-0-dev pkg-config libgtk-3-dev unzip &&\
    apt-get -y autoremove &&\
	apt-get clean autoclean &&\
    rm -rf /var/lib/apt/lists/*

# From source
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
RUN add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u
RUN cd $HOME/src &&\
    wget https://github.com/IntelRealSense/librealsense/archive/v2.48.0.tar.gz &&\
    tar -xvf v2.48.0.tar.gz
RUN cd $HOME/src/librealsense-2.48.0/config &&\
    cp 99-realsense-libusb.rules /etc/udev/rules.d/ 
RUN cd $HOME/src/librealsense-2.48.0/ && mkdir build && cd build &&\
    cmake ../ \
        -DFORCE_RSUSB_BACKEND=true \
        -DCMAKE_BUILD_TYPE=release \
        -DBUILD_EXAMPLES=true \
        -DBUILD_WITH_CUDA=true \
        -DBUILD_GRAPHICAL_EXAMPLES=true &&\
    make -j$(nproc) && make clean && make install

#
# realsense-ros package
#
RUN cd $HOME/src/ &&\
    git clone https://github.com/mzahana/installRealSenseROS.git &&\
    cd installRealSenseROS &&\
    ./installRealSenseROS.sh
# NOTE: You will need to run the 'installRealSenseROS/disableAutosuspend.sh' script on the HOST; NOT inside the container 

#
# Build the entire catkin_ws
#
RUN cd $HOME/catkin_ws/ &&\
    catkin build

RUN echo "source /etc/profile.d/bash_completion.sh" >> /root/.bashrc

# ROS setup.bash scripts
RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
RUN echo 'source /root/catkin_ws/devel/setup.bash' >> /root/.bashrc

# setup entrypoint
COPY ./scripts/ros_entrypoint.sh /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /root